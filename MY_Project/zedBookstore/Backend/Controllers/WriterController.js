import Writer from "../Models/WriterModel.js";
import Book from "../Models/BookModel.js"; 

// ‚ûï Add new writer
export const addWriter = async (req, res) => {
  try {
    const { name,Enname, bio } = req.body;
    const imagePath = req.file ? req.file.path : null;

    const writer = new Writer({
      name,
      Enname,
      bio,
      image: imagePath,
    });

    await writer.save();
    res.status(201).json(writer);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
};


// üë• Get all writers
export const getWriters = async (req, res) => {
  try {
    const writers = await Writer.find();
    res.json(writers);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
};


// üóëÔ∏è Delete a writer
export const deleteWriter = async (req, res) => {
  try {
    const writer = await Writer.findByIdAndDelete(req.params.id);
    if (!writer) return res.status(404).json({ message: "Writer not found" });
    res.json({ message: "Writer deleted successfully" });
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
};


// writer name ‡¶¶‡¶ø‡ßü‡ßá details ‡¶Ü‡¶®‡¶æ + ‡¶∏‡ßá‡¶á writer ‡¶è‡¶∞ ‡¶∏‡¶¨ ‡¶¨‡¶á ‡¶Ü‡¶®‡¶¨‡ßá
export const getWriterByName = async (req, res) => {
  try {
    const name = req.params.name;
    // ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá writer ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶®‡¶æ‡¶Æ ‡¶¶‡¶ø‡ßü‡ßá
    const writer = await Writer.findOne({ name: name });
    if (!writer) return res.status(404).json({ message: "Writer not found" });

    // ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ writer ‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¶‡¶ø‡ßü‡ßá ‡¶¨‡¶á‡¶ó‡ßÅ‡¶≤‡ßã ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶Ü‡¶®‡¶æ (writer field ‡¶è ‡¶®‡¶æ‡¶Æ ‡¶ß‡¶∞‡ßá ‡¶ß‡¶∞‡ßá ‡¶¨‡¶á ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶ß‡¶∞‡ßá ‡¶®‡¶ø‡¶ö‡ßç‡¶õ‡¶ø)
    const books = await Book.find({ writer: name });

    res.json({ 
      writer: writer,   // writer object (name, image, bio)
      books: books      // ‡¶∏‡ßá‡¶á writer ‡¶è‡¶∞ ‡¶∏‡¶¨ ‡¶¨‡¶á 
    });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};